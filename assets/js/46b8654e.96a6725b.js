"use strict";(self.webpackChunkdocusaurus_website=self.webpackChunkdocusaurus_website||[]).push([[8636],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(n),g=i,d=u["".concat(c,".").concat(g)]||u[g]||m[g]||a;return n?r.createElement(d,s(s({ref:t},p),{},{components:n})):r.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const a={title:"ingress-nginx",date:new Date("2023-04-23T00:00:00.000Z"),tags:["Kubernetes"],categories:[]},s="ingress-nginx",o={unversionedId:"template/ingress-nginx",id:"template/ingress-nginx",title:"ingress-nginx",description:"rewrite demo",source:"@site/docs/template/ingress-nginx.md",sourceDirName:"template",slug:"/template/ingress-nginx",permalink:"/docs/template/ingress-nginx",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/template/ingress-nginx.md",tags:[{label:"Kubernetes",permalink:"/docs/tags/kubernetes"}],version:"current",frontMatter:{title:"ingress-nginx",date:"2023-04-23T00:00:00.000Z",tags:["Kubernetes"],categories:[]},sidebar:"tutorialSidebar",previous:{title:"IDEA \u63d2\u4ef6 EasyApi",permalink:"/docs/template/easyapi"},next:{title:"Jackson",permalink:"/docs/template/jackson"}},c={},l=[{value:"rewrite demo",id:"rewrite-demo",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ingress-nginx"},"ingress-nginx"),(0,i.kt)("h2",{id:"rewrite-demo"},"rewrite demo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'# \u521b\u5efadeployment\nkubectl create deployment web-demo --image=nginx --port=80\n\n# \u521b\u5efasvc\nkubectl expose deployment web-demo\n\n# \u521b\u5efaingress\necho \'\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/use-regex: "true"\n    nginx.ingress.kubernetes.io/rewrite-target: /$2\n  name: rewrite\n  namespace: default\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: rewrite.bar.com\n    http:\n      paths:\n      - path: /something(/|$)(.*)\n        pathType: Prefix\n        backend:\n          service:\n            name: web-demo\n            port: \n              number: 80\n\' | kubectl create -f -\n\n# \u6d4b\u8bd5\ncurl --resolve "rewrite.bar.com:80:127.0.0.1" http://rewrite.bar.com:80\n')),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.github.io/ingress-nginx/examples/rewrite/"},"https://kubernetes.github.io/ingress-nginx/examples/rewrite/"),"\n(\u771f\u4e00\u6587\u641e\u5b9a ingress-nginx \u7684\u4f7f\u7528)","[https://cloud.tencent.com/developer/article/1761376]"))}m.isMDXComponent=!0}}]);